package com.wadpam.rnr.dao;

import com.wadpam.rnr.domain.DFeedback;
import net.sf.mardao.core.Filter;

import java.util.ArrayList;
import java.util.Collection;

/**
 * Implementation of Business Methods related to entity DFeedback.
 * This (empty) class is generated by mardao, but edited by developers.
 * It is not overwritten by the generator once it exists.
 *
 * Generated on 2012-12-26T15:11:12.247+0700.
 * @author mardao DAO generator (net.sf.mardao.plugin.ProcessDomainMojo)
 */
public class DFeedbackDaoBean 
	extends GeneratedDFeedbackDaoImpl
		implements DFeedbackDao 
{

    // Delete all user feedback create before the provided timestamp
    public int deleteAllUpdatedBefore(Long timestamp) {

        int numberDeleted = 0;
        Iterable<Long> keys = null;

        if (null == timestamp) {
            keys = queryAllKeys();
        } else {
            LOG.info("Delete older then :{}", timestamp);
            // TODO How to return older then
            Filter filter = null;
            Iterable<DFeedback> dFeedbackOnlyKeys =
                    queryIterable(true, 0, -1, null, null, COLUMN_NAME_UPDATEDDATE, true, null, false, filter);
            keys = domainsToSimpleKeys(dFeedbackOnlyKeys);
        }

        // Manually count the records that will be deleted
        for (Long key : keys) {
            numberDeleted++;
        }

        // Delete
        delete(null, keys);

        return numberDeleted;
    }


    // Get all user feedback create after the provided timestamp
    public Iterable<DFeedback> queryUpdatedAfter(Long timestamp) {

        if (null == timestamp) {
            return queryAll();
        } else {
            // TODO How to return newer then
            Filter filter = null;
            return queryIterable(false, 0, -1, null, null, COLUMN_NAME_UPDATEDDATE, false, null, false, filter);
        }
    }

}
