package com.wadpam.rnr.dao;

import com.google.appengine.api.datastore.Key;
import com.wadpam.rnr.domain.DProduct;

import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;

/**
 * Implementation of Business Methods related to entity DProduct.
 * This (empty) class is generated by mardao, but edited by developers.
 * It is not overwritten by the generator once it exists.
 *
 * Generated on 2012-08-05T20:54:54.772+0700.
 * @author mardao DAO generator (net.sf.mardao.plugin.ProcessDomainMojo)
 */
public class DProductDaoBean 
	extends GeneratedDProductDaoImpl
		implements DProductDao 
{

    @Override
    // Get a domain object by a GAE datastore key
    public DProduct findByCorePrimaryKey(Key key) {
        return findByPrimaryKey(key.getName());
    }

    @Override
    // Get domain objects for a list of GAE datastore keys
    public Map<Key, DProduct> findByCorePrimaryKeys(Collection<Key> keys) {

        // Convert from keys to productIds
        Collection<String> productIds = new ArrayList<String>(keys.size());
        for (Key key : keys)
            productIds.add(key.getName());

        Map<String, DProduct> dProducts = findByPrimaryKeys(productIds);

        // Convert from productIds to Keys
        Map<Key, DProduct> results = new HashMap<Key, DProduct>(dProducts.size());
        for (Map.Entry<String, DProduct> entry : dProducts.entrySet())
            results.put(createKey(entry.getKey()), entry.getValue());

        return results;
    }

    // Find most liked products
    @Override
    public Collection<DProduct> findMostLiked(int limit) {
        return findBy(COLUMN_NAME_LIKECOUNT, false, limit, 0);
    }

    // Find most commented products
    @Override
    public Collection<DProduct> findMostCommented(int limit) {
        return findBy(COLUMN_NAME_COMMENTCOUNT, false, limit, 0);
    }

    // Find most rated products
    @Override
    public Collection<DProduct> findMostRated(int limit) {
        return findBy(COLUMN_NAME_RATINGCOUNT, false, limit, 0);
    }

    // Find products with highest average rating
    @Override
    public Collection<DProduct> findTopRated(int limit) {
        return findBy(COLUMN_NAME_RATINGAVERAGE, false, limit, 0);
    }
}
