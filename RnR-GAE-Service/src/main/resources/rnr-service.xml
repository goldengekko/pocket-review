<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:s="http://www.springframework.org/schema/security"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">


    <!--           Service             -->

    <import resource="classpath*:spring-dao.xml" />

    <bean id="rnrService" class="com.wadpam.rnr.service.RnrService" init-method="init">
        <property name="appDao" ref="dAppDao" />
        <property name="productDao" ref="dProductDao" />
        <property name="ratingDao" ref="dRatingDao" />
        <property name="likeDao" ref="dLikeDao" />
        <property name="commentDao" ref="dCommentDao" />
        <property name="favoritesDao" ref="dFavoritesDao" />
    </bean>

    <bean id="appService" class="com.wadpam.rnr.service.AppService">
        <property name="appDao" ref="dAppDao" />
        <property name="appAdminDao" ref="dAppAdminDao" />
        <property name="emailSender" ref="emailSender" />
    </bean>

    <bean id="emailSender" class="com.wadpam.rnr.service.EmailSender">
        <property name="fromEmailAddress" value="${email.from.address}" />
        <property name="fromEmailName" value="${email.from.name}" />
    </bean>

    <!--           Controllers             -->

    <bean id="productController" class="com.wadpam.rnr.web.ProductController">
        <property name="rnrService" ref="rnrService" />
    </bean>

    <bean id="rating15Controller" class="com.wadpam.rnr.web.RatingController">
        <property name="rnrService" ref="rnrService" />
    </bean>

    <bean id="likeController" class="com.wadpam.rnr.web.LikeController">
        <property name="rnrService" ref="rnrService" />
    </bean>

    <bean id="commentController" class="com.wadpam.rnr.web.CommentController">
        <property name="rnrService" ref="rnrService" />
    </bean>

    <bean id="favoritesController" class="com.wadpam.rnr.web.FavoritesController">
        <property name="rnrService" ref="rnrService" />
    </bean>

    <bean id="appController" class="com.wadpam.rnr.web.AppController">
        <property name="appService" ref="appService" />
        <property name="appDao" ref="dAppDao" />
    </bean>

    <bean id="appAdminController" class="com.wadpam.rnr.web.AppAdminController">
        <property name="appService" ref="appService" />
    </bean>

    <!--           Security             -->

    <s:http pattern="/api/backoffice/user/login" security="none" />
    <s:http pattern="/api/backoffice/user/logout" security="none" />

    <s:http realm="rnr-backoffice" create-session="stateless"
            pattern="/api/backoffice/**" authentication-manager-ref="backofficeAuthenticationManager"
            entry-point-ref="gaeEntryPoint">
        <s:anonymous enabled="false"/>
        <s:intercept-url pattern="/api/backoffice/user" access="ROLE_PENDING, ROLE_USER, ROLE_ADMIN" />
        <s:intercept-url pattern="/api/backoffice/user/**" access="ROLE_ADMIN" />
        <s:intercept-url pattern="/api/backoffice/app/all" access="ROLE_ADMIN" />
        <s:intercept-url pattern="/api/backoffice/**" access="ROLE_USER" />
        <s:custom-filter position="PRE_AUTH_FILTER" ref="gaePreAuthenticationProcessingFilter" />
    </s:http>

    <bean id="backofficeAuthenticationManager" class="org.springframework.security.authentication.ProviderManager">
        <property name="providers">
            <list>
                <ref local="preAuthenticatedAuthenticationProvider"/>
            </list>
        </property>
    </bean>

    <bean id="preAuthenticatedAuthenticationProvider" class="org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider">
        <property name="preAuthenticatedUserDetailsService" ref="gaeUserService" />
    </bean>

    <bean id="gaeUserService" class="com.wadpam.rnr.security.GaeUserDetailsService" >
        <property name="appAdminDao" ref="dAppAdminDao" />
    </bean>

    <bean id="gaeEntryPoint" class="com.wadpam.rnr.security.GaeAuthenticationEntryPoint" />

    <bean id="gaePreAuthenticationProcessingFilter" class="com.wadpam.rnr.security.GaePreAuthenticatedProcessingFilter">
        <property name="authenticationManager" ref="backofficeAuthenticationManager" />
    </bean>


    <s:http realm="rnr-app" create-session="stateless"
            pattern="/api/**" authentication-manager-ref="apiAuthenticationManager">
        <s:anonymous enabled="false" granted-authority="ROLE_APP" key="aL5Mge85F"/>  <!-- Set to true to turn for API authentication -->
        <s:intercept-url pattern="/api/**" access="ROLE_APP" />
        <s:http-basic />
    </s:http>

    <bean id="apiAuthenticationManager" class="org.springframework.security.authentication.ProviderManager">
        <property name="providers">
            <list>
                <ref local="daoAuthenticationProvider"/>
                <ref local="anonymousAuthenticationProvider"/>
            </list>
        </property>
    </bean>

    <bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <property name="userDetailsService" ref="apiUserService"/>
    </bean>

    <bean id="apiUserService" class="com.wadpam.rnr.security.ApiUserDetailsService">
        <property name="appDao" ref="dAppDao" />
    </bean>

    <bean id="anonymousAuthenticationProvider" class="org.springframework.security.authentication.AnonymousAuthenticationProvider">
        <property name="key" value="aL5Mge85F"/>
    </bean>

</beans>
